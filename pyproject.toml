[project]
name = "mnn-torch"
version = "0.1.0"
description = "Memristive Neural Networks with PyTorch - A library for implementing memristive neural networks using PyTorch"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "MNN-Torch Contributors", email = "contact@mnn-torch.dev" }
]
maintainers = [
    { name = "MNN-Torch Contributors", email = "contact@mnn-torch.dev" }
]
keywords = ["memristive", "neural-networks", "pytorch", "spiking-neural-networks", "hardware-acceleration", "neuromorphic", "memristor"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Framework :: Pytest",
]
dependencies = [
    "jupyter>=1.1.1",
    "matplotlib>=3.10.6",
    "numpy>=2.2.6",
    "scikit-learn>=1.7.2",
    "snntorch>=0.9.4",
    "torch>=2.8.0",
    "torchvision>=0.23.0",
    "scipy>=1.14.0",
    "build>=1.3.0",
    "twine>=6.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=3.0.0",
    "myst-parser>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/mnn-torch/mnn-torch"
Repository = "https://github.com/mnn-torch/mnn-torch"
Documentation = "https://mnn-torch.readthedocs.io"
"Bug Tracker" = "https://github.com/mnn-torch/mnn-torch/issues"
"Source Code" = "https://github.com/mnn-torch/mnn-torch"
"Download" = "https://pypi.org/project/mnn-torch/#files"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mnn_torch"]
exclude = [
    "/data",
    "/uv.lock",
    "/.python-version",
    "/main.py",
]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/docs",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
    "/CHANGELOG.rst",
    "/CONTRIBUTING.rst",
    "/AUTHORS.rst",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mnn_torch"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/mnn_torch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
]
